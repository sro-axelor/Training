<?xml version="1.0" encoding="UTF-8"?>

<object-views xmlns="http://axelor.com/xml/ns/object-views"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://axelor.com/xml/ns/object-views
  http://axelor.com/xml/ns/object-views/object-views_5.4.xsd">

<!-- grid view -->
	<grid name="order-grid" title="Order"
		model="com.axelor.action.db.Order" edit-icon="false"
		customSearch="false" x-selector="checkbox" freeSearch="none"
		x-no-fetch="false">
		
<!-- 		<field name="orderId" title="Order Id"/> -->
		<field name="orderName" />
		<field name="orderDate" />
		<field name="deliveryDate" />
		<field name="orderStatus" />
		<field name="orderQuantity" />
		
	</grid>

<!-- form view -->
	<form name="order-form" title="Order"
		model="com.axelor.action.db.Order" canSave="true" canDelete="false"
        onNew="action-record-for-button" onSave="group-of-actions-test">
<!--    onSave="actionattribute-for-readonly-after-saving-ordeid, action-condition-test" -->
		<panel>
<!-- 			<field name="orderId"  title="Order Id"/> -->
			<field name="orderName" />
			<field name="orderDate" />
			<field name="deliveryDate" />
			<field name="orderStatus" selection="status" />
			<field name="orderQuantity" selection="quantity"
				widget="NavSelect" />
		</panel>

<!-- buttons for test attributes -->
		<panel>
				<button onClick="action-script-test" name="action-script" title="Using Action-Script" colSpan="2"/>
				<button onClick="create.hello" name="action-script-custom-models" title="Action-Script Custom-Models" colSpan="2"/>
<!-- 			<button onClick="action-order-validate" name="action-validate" title="Using Action-Validate" colSpan="2"/> -->
		</panel>

<!-- panel relatted feild -->
		<panel-related field="customerlist" />

<!-- <panel-related name="addressesPanel" title="Address" -->
<!-- 			field="addresslist" form-view="address-form-popup" editable="true" -->
<!-- 			canMove="true" height="4" x-selector="checkbox" canSelect="true"> -->
<!-- 			<field name="street" /> -->
<!-- 			<field name="area" /> -->
<!-- 			<field name="city" /> -->
<!-- 			<field name="state" /> -->
<!-- 			<field name="zip" /> -->
<!-- 			<field name="country" /> -->
<!-- 		</panel-related> -->



		<panel sidebar="true">
			<button onClick="save" name="Save" title="Place Order"
				css="btn-success" />
			<button onClick="delete" name="Delete" title="Discard"
				css="btn-info" />
		</panel>
	</form>

	<selection name="status" >
		<option value="draft" color="red">DRAFT</option>
		<option value="wishlist" color="pink">WISHLIST</option>
		<option value="ordered" color="blue">ORDERED</option>
		<option value="canceled" color="green">CANCELED</option>
	</selection>


	<selection name="quantity">
		<option value="1">1</option>
		<option value="2">2</option>
		<option value="3">3</option>
		<option value="4">4</option>
		<option value="5">5</option>
		<option value="6">6</option>
		<option value="7">7</option>
		<option value="8">8</option>
		<option value="9">9</option>
		<option value="10">10</option>
	</selection>

<!-- for orderId make readonly true when onsave happened -->
<!-- 	<action-attrs -->
<!-- 		name="actionattribute-for-readonly-after-saving-ordeid" -->
<!-- 		model="com.axelor.action.db.Order"> -->
<!-- 		<attribute name="readonly" for="orderId" expr="true" /> -->
<!-- 	</action-attrs> -->


<!-- adding address -->
    <action-attrs name="add-address" model="com.axelor.action.db.Order" >
        <attribute name="value:add" for="addresslist" expr="select: a from Address a"/>
    </action-attrs>	

<!-- deleting address -->
    <action-attrs name="delete-address" model="com.axelor.action.db.Order" >
        <attribute name="value:del" for="addresslist" expr="select: a from Address a"/>
    </action-attrs>	
    	
<!-- record action -->	
    <action-record name="action-record-for-button"
		           model="com.axelor.action.db.Order">
		 <field name="orderDate" expr="eval: __date__"/>
	</action-record>


<!-- action-script -->
<!-- after select status then it goes that status type like={draft,whishlist,ordered,cancled} to the ordername  -->
		<action-script name="action-script-test" model="com.axelor.action.db.Order" >
			  <script language="js" transactional="true" >
				  <![CDATA[
	 			  var req = $request;  
				  var res = $response;  
	 			  var co = req.context; 
				  var order = new Order(); 
	 			  var orderStatus = co.orderStatus; 

	 			  res.setValue('orderName', orderStatus); 
				  ]]> 
			  </script>
		</action-script>
	
	
<!-- action-script can be used for custom models too --> 
	<!-- 	<action-script name="create.hello" model="com.axelor.action.db.Order"> -->
	<!-- 	  <script language="js" transactional="true"> -->
	<!-- 	  <![CDATA[	 -->
	<!-- 			    var hello = $json.create('Order');   -->
	<!-- 			    hello.orderName = "Hello!!!";             -->
						
	<!-- 			   // var world = $json.all('world').by('orderName', '=', 'World!!!').fetchOne();   -->
	<!-- 	 		   // if (world == null) {  -->
	<!-- 		       // world = $json.create('world');  -->
	<!-- 		       // world.orderName = "World!!!";  -->
	<!-- 	 	       // world = $json.save(world);  -->
			     
	<!-- 		       // now we can't update world, as it's converted to real instance  -->
	<!-- 	 		   // } -->
	<!-- 	 		   // hello.world = world;   -->
		 		    
	<!-- 	 		   // return as response values  -->
	<!-- 	 		   // $response.values = hello;  -->
	<!-- 	 		       ]]>  -->
	<!-- 		  </script> -->
	<!-- 	</action-script> -->

	<action-validate name="action-order-validate">
    <!--  <error message="Order Date is not be in future,it should be today." if="orderStatus &amp;&amp; orderDate ==__date__"/>  -->
		  <error message="Order Date is not be in future,it should be today." if="orderStatus &amp;&amp; orderDate &gt;__date__"/>
		  <error message="Delivery Date not before of orderDate it should be in the future." if="orderStatus &amp;&amp; deliveryDate &lt;orderDate"/>
		  <alert message="No Sale Order Items. Would you like to continue?" if="orderStatus &amp;&amp; !orderQuantity"/>
	</action-validate>
	
	
<!-- action-condition -->	
	<action-condition name="action-condition-test-orderStatus">
		<check field="orderName" if="eval:orderName == null" error="orderName should not be empty"/>
	</action-condition>


<!-- action group -->
    <action-group name="group-of-actions-test">
        <action name="action-order-validate"/>
        <action name="action-condition-test-orderStatus"/>
    </action-group>

</object-views>